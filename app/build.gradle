/*
 * Copyright (C) 2021 Dev Sebastian
 * This file is part of WonderScan <https://github.com/devsebastian/WonderScan>.
 *
 * WonderScan is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * WonderScan is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with WonderScan.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.wonderscan.android"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 5
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    //implementation project(path: ':openCVLibrary344')

    implementation 'com.quickbirdstudios:opencv:3.4.15'

    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:1.1.0-alpha08"
    implementation "androidx.camera:camera-lifecycle:1.1.0-alpha08"
    implementation "androidx.camera:camera-view:1.0.0-alpha28"
    implementation "androidx.camera:camera-extensions:1.0.0-alpha28"

    implementation 'com.google.code.gson:gson:2.8.7'                            // GSON

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    implementation 'com.github.ybq:Android-SpinKit:1.4.0'                       // spinkit

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:17.0.0'

    implementation 'androidx.preference:preference-ktx:1.1.1'                   // preference fragment

    implementation 'com.jsibbold:zoomage:1.3.1'                                 // zoomview

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"           // ViewModelScope
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"             // LifecycleScope
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"            // LiveData

    // Room components
    implementation "androidx.room:room-ktx:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"

}